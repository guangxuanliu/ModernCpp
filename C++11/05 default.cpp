#include <iostream>

/*
* 概念：
* 当定义了一个构造函数时（例如接受参数的构造函数），编译器将不再提供默认构造函数
* 可以使用default关键字来显式请求编译器生成默认构造函数
*/

class A
{
public:
    A() = default;          // 显式请求编译器生成默认构造函数
    A(int a) : a(a) {}

private:
    int a;
};

int main()
{
    A a1;     // 默认构造函数，此处a的值为未初始化
    A a2(1);  // 接受参数的构造函数
    return 0;
}


// 注意：与空构造函数的区别
// =default:生成的构造函数，会执行编译器的默认初始化操作
// 空构造函数：不会执行编译器的默认初始化操作

// 默认初始化
// 默认值由变量的类型和变量的位置决定
// 内置类型：
// 1.函数体内：未初始化
// 2.函数体外：初始化为0
// 类类型：
// 1.函数体内：调用默认构造函数
// 2.函数体外：调用默认构造函数


// 经验：
// 尽量不用默认构造函数，因为默认构造函数会执行编译器的默认初始化操作
// 尽量使用初始化列表，避免默认初始化