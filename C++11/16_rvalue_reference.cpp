#include <iostream>
#include <string>

/*
* 右值引用
* 所谓右值引用，就是可以绑定到右值的引用，我们通过&&而不是&来获得一个右值引用。
* 右值引用有一个重要的性质，只能绑定到一个将要销毁的对象。因此，我们可以自由地将一个右值引用的资源“移动”到另一个对象中。
* 虽然可以通过调用std::move来将一个左值转换为右值引用。但是调用move就意味着我们要放弃对原对象的访问。
*/

int main()
{
    int i = 42;
    int &r = i;         // 正确，r引用了一个左值
    // int &&rr = i;    // 错误，不能将一个右值引用绑定到一个左值
    // int &r2 = i * 42; // 错误，i*42是一个右值
    const int &r3 = i * 42; // 正确，我们可以将一个const的引用绑定到一个右值上
    int &&rr2 = i * 42;     // 正确，将rr2绑定到乘法表达式的结果上


    return 0;
}